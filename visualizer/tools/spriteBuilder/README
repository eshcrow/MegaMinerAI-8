This file will contain the guidelines for the tool that we should have for the sprite builder.
spriteBuilder python tool

usage:
python spriteBuilder path [regexp]
 --outSize x y        - When this parameter is passed to the tool, it will automatically
                        resize it to the dimensions x and y.
 -o outPath           - Where to store the resulting file.  Defaults to current directory

The first thing spriteBuilder will have to do is search the given directory for any files 
that matches the given regular expressions in 'regexp' or just take all files in there by 
default. 

Once the list of files has been accumulated, you will need to open one to find out it's image 
size, (x, y)

* NOTE: x and y should be a power of 2, but not necessarily square.  In the future, it would
 be nice if we could use non-power of 2 sprites and have this tool automatically compensate,
 but it's not required at the moment.

So once you've determined what each image size will be (and they all have to be the same size), 
you will need to calculate the optimal output image size based on this input image sequence.  

Examples:
  Image Size     # of Images       Optimal Output Size:
 ------------   -------------    ------------------------
   256x256            1                  256x256
   256x256            2                  512x256 
   256x256            3                  512x512
   256x256            4                  512x512
   256x256            5                  1024x512
   256x256            8                  1024x512
   256x256            9                  1024x1024
   128x256            2                  256x256
   128x256            4                  512x256
   128x256            5                  512x512
     etc             etc                   etc

Once you've determined your image size, build the image and start putting in the images 
from the sequence (make sure they're in order) onto the output image.  The image sequence
should go left to right, then the next row, then left to right, etc, etc. 

Once that image is done, it should export the image out to some reasonable name 
baseImageName-anim.png for example and it should also export a meta file:
baseImageNmae-anim.png.meta which contains:

frames (numberOfFramesInThisAnimation)
size xDimension yDimension (of animation frame, not the full image)


Suggested libraries for using this tool:
 python's re library (regular expressions for matching file names to search)
 python imaging library for loading in images and outputting the animation
